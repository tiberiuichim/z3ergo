The Zope 3 ecosystem
====================
The size of the Zope 3 extension packages ecosystem is a clear proof of the
platform vitality. Even more, because of the WSGI compatibility, it is possible
to extend this ecosystem to include web development libraries that have no
apparent connection with Zope. There are 3 large actors in this ecosystem:
the Zope Corporation, the Zope 3 Community (o non-formal community, responsible
for the creation of a big part of Zope 3) and the Plone developer community - 
although their Zope 3 packages that are fully compatible with Zope 3, with no
Plone dependencies, are smaller in numbers.    

The Zope packages
*****************
The libraries that are most likely to be used in a Zope 3 application are:

* zope.annotation
* zope.contentprovider
* zope.viewlet
* zope.copypastemove
* zope.event
* zope.securitypolicy
* zope.formlib
* zope.interface
* zope.schema
* zope.app.catalog
* zope.app.container

Packages from the zope.* namaspace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

zope.annotation
    allow attaching data to objects. Offers an implementation which stores this
    data in a special attribute of the objects
      
zope.browser
    contains a few interfaces used in other packages
    
zope.cachedescriptors
    allows memoizing attributes
    
zope.component
    implements ZCA. Offers adapters, utilities, subscribers, handlers. In 
    implementation are used registers in which components are registered, 
    ofering also the posibility to create local registries, that will have 
    priority before the global registries (using the sites mechanism)
      
zope.configuration
    defines an extensible configuration system. Implements the bases of ZCML

zope.contentprovider
    provides the posibility to componentize the page structure with dynamic
    pieces of content, which can be reused and connected to the type of
    context, request and page unto which they are inserted

zope.contenttype
    utilities to determine the type of files, extends the mimetypes standard
    module

zope.copypastemove
    support for copy, paste and move operations for objects. Generates events
    when those operations are executed

zope.datetime
    definitions and utilities to manipulate time and date objects

zope.deferredimport
    support for optimizing python import operations, which helps in faster
    loading of applications

zope.deprecation
    defines and API useful in marking modules or functions as deprecated

zope.documenttemplate
    a templating engine for the DTML syntax

zope.dottedname
    allows solving Python objects using dotted names 

zope.dublinecore
    general implementation of DublinCore, offers an implementation that stores
    that data in annotation

zope.error
    global implementation of local and global utilities for error reporting

zope.event
    implements a notification system using a subscribers system that defines 
    handlers for those events

zope.exception
    contains definitions for basic exceptions and utilities to format exceptions

zope.filereprezentation
    defines interfaces used in representing objects through various protocols, 
    such as WebDav or FTP

zope.formlib
    a general form library that will generate, validate and automatically
    process web forms

zope.hookable
    makes it possible to have global, explicit, monkey-patching at runtime

zope.i18n
    base implementation of internationalization in zope, implements translation
    domains, message catalogs, a zcml extension to register message catalogs and
    has utilities for internationalization of messages such as money, dates, 
    numbers, etc.

zope.i18nmessage
    implements internationalizable messages

zope.index
    implements indexes as BTree structures, optimized to index several types of
    data: fields with values, text and list of values. These indexes are used
    in the implementation of the catalog

zope.interface
    the base library in Zope 3, allows defining, using and querying objects
    and the interfaces that they provide. Represents one of the important pieces
    in ZCA 

zope.lifecycleevent
    defines a series of events that an object can be involved (creating, 
    erasing, changing, adding in a container)

zope.location
    defines a method of physically locating objects by using their name and
    their parent, also has utilities to locate them. Defines utilities to place
    objects in a particular location in the objects tree by proxying them with
    LocationProxy. This proxy is very important as it allows publishing
    non-persistent objects through the web, and also allows creating URL 
    patterns that don't match the physical structure of the database 

zope.minmax
    defines a method of solving conflicts from the MVCC infrastructure using
    values that come from a policy that favors minimal or maximal values of
    objects involved in the conflict

zope.pagetemplate
    implements pages that use template with TAL syntax
    implementeaza pagini ce folosesc template-uri cu sintaxa TAL

zope.proxy
    a C based implementation of proxies. Is used by the other libraries to
    implement location and security proxies

zope.publisher
    implements publishing mechanisms for content through http, ftp and xmlrpc
    protocols, defines the involved components (request, response, skins,
    internationalization, etc) and has WSGI support for them

zope.rdb
    integrates with relational databases by creating and maintaing global
    connections with them

zope.schema
    extends zope.interface to implement specific types of attributes (for 
    example, numbers, lines of text, list of values, etc). Here are defined
    the vocabularies - utilities that return a list of values to display
    options in user interfaces. One of the base packages for Zope when it comes
    to implementing user interfaces

zope.security
    defines a security system tha uses principals and permission to restrict
    access to objects and their attributes. Contains integration with ZCML
    for permission definitions and security policies

zope.securitypolicy
    defines Zope's security policy, which extends the security infrastructure
    with roles and group, to achieve a greater flexibility. Defines the way
    roles and permissions are stored on objects using maps and security 
    managers. Contains integration with ZCML for role definitions and granting
    permissions to roles and principals.

zope.sendmail
    defines global utilities that can be used to send emails (synchronous, 
    queued) and has zcml integration to define them

zope.sequencesort
    utilities to sort lists

zope.server
    contains an implementation for ftp and http servers. ZServer (this 
    implementation) is one of the fastest Python HTTP servers

zope.session
    implements session and utilities to identify clients

zope.size
    defines the way size information is extracted from objects, contains a basic
    implementation of this

zope.structuredtext
    an engine to change Structured Text into HTML

zope.tal
    an implementation of TAL templating syntax

zope.tales
    contains TAL extensions to introduce new types of expresions to traverse
    objects

zope.testbrowser
    contains an http browser that can be programmed, useful in defining 
    functional texts

zope.testing
    contains utilities that can be used in defining tests for Zope application
    and packages. Contains support for unit tests and integration tests

zope.testrecorder
    contains a web proxy that can be used in recording the http communication,
    useful in writing integration tests 
    
zope.thread
    defiens a way to create and manage per thread local objects. This is a 
    simple extension of the thread standard module

zope.traversing
    defines utilities and traversing namespaces, also has utilities to compute
    absolute URLs for objects, taking into consideratio the application's 
    virtual hosting
    
zope.viewlet
    extends the concept of content provider with that of viewlet and viewlet
    managers, to allow defining an area where viewlets can be inserted, which
    are dependent on the context type and the area where they are inserted.
    Defines, also, several standard viewlet managers

zope.xmlpickle
    pickle based serialization to and from xml

Packages from the zope.app namespace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
zope.app.apidoc
    makes it possible to introspect objects with an autogenerated page that
    presents the provided interfaces, attributes and documentation. Offers a
    ZCML extension to register documentation for the so-called "Zope Book"

zope.app.aplicationcontrol
    Offers the possibility to control the application by the user (stop/restart/
    database pack, etc)

zope.app.appsetup
    a way to configure and build Zope applications

zope.app.authentication
    a complex system, based on plugins, to extract authentication data and to
    authenticate users (including the source of users)

zope.app.basicskin
    a simple skeleton skin

zope.app.boston
    a complete skin, similar to Rotterdam, based on viewlets

zope.app.broken
    integrates broken objects from the database so that they can be viewed and
    debugged

zope.app.cache
    a global utility that can store data for caching purposes

zope.app.catalog
    a complete indexing and searching solution for objects. Has two types of 
    indexes, based on zope.index: text and field

zope.app.component
    Extensions of zope.component. Integrates the various Zope components (views,
    layers, security, utilities, etc) and defines zcml extensions for them.

zope.app.container
    A BTree based implementation of containers, defines how they are traversed 
    and also has support for preconditions (what types of objects can be
    added, etc)

zope.app.content
    Defines the IContentType interface, which can be used to mark other 
    interfaces as having that type. Defines a vocabulary that lists these
    interfaces.

zope.app.dav
    Has a webdav server integrated with the rest of Zope infrastructure, has
    integration with ZCML

zope.app.debug
    has a debugger that can be started from the application controller script

zope.app.dependent
    provides a method to mark objects in the graph as being dependent on 
    each other

zope.app.dtmlpage
    has a content type based on DTML templates

zope.app.exception
    pages for exceptions, generating the equivalent in HTTP exceptions

zope.app.external
    minimal integration for what is needed to build an external editor

zope.app.file
    two new types of content: File and Image, also with integration for their
    external representation (IFileRepresentation)

zope.app.folder
    offers a folder content type, integrated with the management interface and
    its representation as external object (IFileRepresentation)

zope.app.form
    the old form library for Zope, it is considered outdated because of the
    dependency on ZCML and inflexibility. All these considered, the widget
    model is also used by zope.formlib and thus remains an important library

zope.app.ftp
    a view model for FTP

zope.app.generations
    migrationi for database when the persistent objects schema is changed

zope.app.homefolder
    has a homefolder implementation for users

zope.app.http
    integration with the http protocol: exceptions, methods, traversing methods
    and how views are solved

zope.app.i18n
    implements a persistent i18n messages catalog and ZCML extensions to 
    register translation folders 

zope.app.i18nfile
    internationalizable images and files (as content)

zope.app.interface
    a vocabulary for interfaces that an object provides

zope.app.interpretor
    an untrusted Python code interpretor

zope.app.intid
    a utility that associates unique ids to objects from the database

zope.app.keyreference
    an adapter for persistent objects that extracts their low level id from the 
    database, based on which an intid can be associated

zope.app.locales
    contains translation and utilities for Zope 3 software

zope.app.locking
    an implementation for object access locking, to be used, for example, in
    WebDav

zope.app.module
    persistent Python modules (Python code in ZODB)

zope.app.onlinehelp
    an infrastructure for help and documentation and a ZCML extension that makes
    it possible to register help by any extension package

zope.app.pagetemplate
    integrates ZPT templates with the view classes, offers a ZCML expression
    that makes it possible to register new types of ZPT expressions

zope.app.preference
    implements a method of storing preferences for each user and contains
    integration with ZCML for recording groups of preferences

zope.app.preview
    a simple way of previewing the site in an iframe

zope.app.principalannotation
    a method to associated data with principals, through a persistent annotation

zope.app.publication
    integrated methods of content publishing, has a ZCML extension to define 
    new methods of publishing, for each HTTP verb used

zope.app.publisher
    implements objects/pages that can be used in publishing content. Implements
    ZCML extensions to register pages and menus in ZCML

zope.app.pythonpage
    implements a type of persistent content that can interpret Python

zope.app.renderer
    a library useful in transforming from one type of content into another one
    (for example, from rest or stx in html)

zope.app.rotterdam
    the most used Zope skin, implements a complex management interface 

zope.app.schema
    integrates zope.schema with the security infrastructure, has a registry
    for vocabularies

zope.app.security
    implements the security infrastructure of Zope, has base methods to 
    authenticate users and generate principals, offers zcml extensions to 
    declare global principals and groups  

zope.app.securitypolicy
    implements pages that can be used to make local changes (in the database)
    of the security settings

zope.app.server
    implements http and wsgi servers, makes it possible to configure and to
    control them

zope.app.session
    has support for session through association of data with a client

zope.app.sqlscript
    implements content objects that can execute sql commands

zope.app.testing
    has utilities to create tests

zope.app.tree
    implements a tree widget that can be used in user interfaces to represent
    graph of objects

zope.app.twisted
    implements a server based on Twisted with configuration and control

zope.app.undo
    implements pages to control and execute undo steps

zope.app.winservice
    an service integrated with WinNT based operating systems

zope.app.workflow
    a method of workflow and support for persistent definitions of workflows

zope.app.wsgi
    a WSGI application, used in building WSGI based Zope applications

zope.app.xmlrpcintrospection
    offers introspection for the XMLRPC module, by implementing a few new 
    methods

zope.app.zapi
    groups some of the most used functions, for the convenience of developers

zope.app.zcmlfiles
    a few zcml files that group, by theme, the Zope packages, allowing selective
    loading

zope.app.zopeappgenerations
    migrates the database from older versions of Zope

zope.app.zopetop
    a Zope skin, not very popular as it is an older version

zope.app.zptpage
    implements persistent templates in the database


Other packages
**************
There are aproximatively 300 extension packages on svn.zope.org, not including
the namespaces zope.* and zope.app.*. Also, the Zope community is the biggest
producer of egg packages (following the PyPI statistics). Among those packages,
there are solutions for:

handling big files storages
    z3c.extfile, z3c.blobfile

reusing views through template customization
    z3c.template

separate the content of a view from its layout
    z3c.layout, z3c.pagelet

advanced, extensible forms
    z3c.form

memoizing (caching) views
    lovely.responsecache

headers for caching
    z3c.caching
    z3c.responseheaders
    z3ext.cacheheaders

ETAG support
    z3c.conditionalviews

various fields and widgets
    z3c.schema.*
    z3c.widget.*

integration with RDBs
    STORM
    zope.sqlalchemy, z3c.saconfig, ore.alchemist

automatic inclusion of resources (CSS, JS)
    zc.resourcelibrary
    z3c.resourceinclude

resource concatanation
    z3c.resourcecollector

local ZCA configuration
    z3c.baseregistry

faster templating engine
    z3c.pt

workflow
    hurry.workflow

language negociation, content internationalization
    z3c.language.*

configuration framework, specific to each package
    z3c.configurator

application development
    zc.buildout, pb.recipes.pydev (Eclipse integration for buildout)

execution of asynchronous tasks
    lovely.remotetask, zc.async

session sharing for ZEO clients
    lovely.session

flexible generation of tables and listings
    z3c.table, zc.table

greater control over the cataloging and indexing process
    z3c.indexer


Other web resources
*******************

Zope 3 wiki
    Although doesn't seem too atractive, the Zope 3 wiki represents, at this
    moment, the official site and is a good place to find pointers to other
    Zope 3 sites. Location://wiki.zope.org/zope3

The new zope.org
    Although it is not yet officially launched, the new website has already
    enough new and intersting pages (for example, the Getting Started Guide,
    updated to the latest method of installing Zope 3). 
    Location: http://new.zope.org/

A Comprehensive Guide to Zope Component Architecture
    A document filles with examples and explanation of the Zope Component 
    Architecture, configuration with zcml and the way to use in any Python
    application. Location: http://www.muthukadan.net/docs/zca.html

3rd party packages reference guide
    A guide/reference of extension pacakges from svn.zope.org.
    Location: http://wiki.zope.org/zope3/Zope3PackageGuide

What's new in Zope 3.3
    A document that discusses the changes brought by Zope 3.3 (when the 
    component simplification took place). Useful for a short presentation of
    skins, vocabularies and factories. 
    Location: http://kpug.zwiki.org/WhatIsNewInZope33

Zope 3 Book
    Although seems old (it was written before the component architecure 
    simplification), a good deal of what is there is still true, or can be 
    easily adjusted to today's code. 
    Location: http://wiki.zope.org/zope3/Zope3Book

Worldcookery
    The Downloads section contains code licensed under GPL. This code, in the 
    absence of the book (which is highly recommended), helps in understanding
    Zope. Location: http://worldcookery.com/Downloads

Documentation for z3c.form
    z3c.form includes its documentation in its source code. An HTML version is 
    available at http://www.carduner.net/docs/z3c.form/

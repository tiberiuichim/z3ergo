The Zope 3 ecosystem
====================
The size of the Zope 3 extension packages ecosystem is a clear proof of the
platform vitality. Even more, because of the WSGI compatibility, it is possible
to extend this ecosystem to include web development libraries that have no
apparent connection with Zope. There are 3 large actors in this ecosystem:
the Zope Corporation, the Zope 3 Community (o non-formal community, responsible
for the creation of a big part of Zope 3) and the Plone developer community - 
although their Zope 3 packages that are fully compatible with Zope 3, with no
Plone dependencies, are smaller in numbers.    

The Zope packages
*****************
The libraries that are most likely to be used in a Zope 3 application are:

* zope.annotation
* zope.contentprovider
* zope.viewlet
* zope.copypastemove
* zope.event
* zope.securitypolicy
* zope.formlib
* zope.interface
* zope.schema
* zope.app.catalog
* zope.app.container

Packages from the zope.* namaspace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

zope.annotation
    allow attaching data to objects. Offers an implementation which stores this
    data in a special attribute of the objects
      
zope.browser
    contains a few interfaces used in other packages
    
zope.cachedescriptors
    allows memoizing attributes
    
zope.component
    implements ZCA. Offers adapters, utilities, subscribers, handlers. In 
    implementation are used registers in which components are registered, 
    ofering also the posibility to create local registries, that will have 
    priority before the global registries (using the sites mechanism)
      
zope.configuration
    defines an extensible configuration system. Implements the bases of ZCML

zope.contentprovider
    provides the posibility to componentize the page structure with dynamic
    pieces of content, which can be reused and connected to the type of
    context, request and page unto which they are inserted

zope.contenttype
    utilities to determine the type of files, extends the mimetypes standard
    module

zope.copypastemove
    support for copy, paste and move operations for objects. Generates events
    when those operations are executed

zope.datetime
    definitions and utilities to manipulate time and date objects

zope.deferredimport
    support for optimizing python import operations, which helps in faster
    loading of applications

zope.deprecation
    defines and API useful in marking modules or functions as deprecated

zope.documenttemplate
    a templating engine for the DTML syntax

zope.dottedname
    allows solving Python objects using dotted names 

zope.dublinecore
    general implementation of DublinCore, offers an implementation that stores
    that data in annotation

zope.error
    global implementation of local and global utilities for error reporting

zope.event
    implements a notification system using a subscribers system that defines 
    handlers for those events

zope.exception
    contains definitions for basic exceptions and utilities to format exceptions

zope.filereprezentation
    defines interfaces used in representing objects through various protocols, 
    such as WebDav or FTP

zope.formlib
    a general form library that will generate, validate and automatically
    process web forms

zope.hookable
    makes it possible to have global, explicit, monkey-patching at runtime

zope.i18n
    base implementation of internationalization in zope, implements translation
    domains, message catalogs, a zcml extension to register message catalogs and
    has utilities for internationalization of messages such as money, dates, 
    numbers, etc.

zope.i18nmessage
    implements internationalizable messages

zope.index
    implements indexes as BTree structures, optimized to index several types of
    data: fields with values, text and list of values. These indexes are used
    in the implementation of the catalog

zope.interface
    the base library in Zope 3, allows defining, using and querying objects
    and the interfaces that they provide. Represents one of the important pieces
    in ZCA 

zope.lifecycleevent
    defines a series of events that an object can be involved (creating, 
    erasing, changing, adding in a container)

zope.location
    defineste un model de localizare fizica a obiectelor folosind numele 
    si parintele acestora, precum si diverse utilitare pentru localizare.
    Defineste de asemenea utilitare pentru plasarea obiectelor intr-un graph
    folosind LocationProxy, simuland astfel localizarea lor fizica. 
    LocationProxy este important pentru ca se poate folosi pentru publicarea
    prin web a obiectelor nepersistente si astfel se pot realiza modele de 
    traversare si URL-uri care nu reprezinta neaparat structura fizica a bazei
    de date

zope.minmax
    Defineste un model de rezolvare a conflictelor din infrastructura MVC 
    folosind valorile printr-o politica ce favorizeaza valorile minime sau
    maxime ale obiectelor implicate in conflict

zope.pagetemplate
    implementeaza pagini ce folosesc template-uri cu sintaxa TAL

zope.proxy
    o implementare optimizata in C a conceputului de proxy. Este folosit
    in celelalte librarii in implementarea un proxiuri de locatie si 
    securitate

zope.publisher
    implementeaza mecanismele de publicare a continutului prin protocoalele
    http, ftp si xmlrpc, defineste componentele implicate (request, response, 
    skinuri, internationalizare, etc) si totodata asigura implementarea 
    suportului WSGI

zope.rdb
    integrare cu baze de date relationale prin realizarea si mentinerea unor
    conexiuni globale cu acestea

zope.schema
    extinde zope.interface pentru a implementa tipuri specifice de atribute
    (gen numar, o linie de text, o lista de valori, etc). Tot aici sunt 
    definite si vocabularele, utilitare ce intorc o sursa de valori pentru
    afisarea de optiuni in interfetele cu utilizatorii. Unul dintre 
    pachetele de baza a Zope-ului atunci cand vine vorba de implementarea de 
    interfate cu utilizatorii. 

zope.security
    defineste un sistem de securitate ce foloseste principali si permisiuni
    pentru a restrictiona accesul la obiecte si atributele acestora. Contine
    integrarea cu ZCML a definitiei de permisiuni si politici de securitate.

zope.securitypolicy
    defineste politica de securitate a zope-ului, ce extinde infrastructura
    de securitate cu roluri si grupuri pentru a atinge o flexibilitate mai 
    mare. Defineste modul in care se stocheaza rolurile si permisiunile
    pe obiecte folosind maparile si managerii de securitate. 
    Contine integrarea cu ZCML a definitie de roluri si de acordare de
    permisiuni rolurilor si principalilor.  

zope.sendmail
    defineste utilitare globale folosite pentru sisteme directe sau optimizate
    pentru trimiterea de emailuri si integrarea in zcml a acestora

zope.sequencesort
    utilitare pentru sortarea de liste

zope.server
    contine implementari de servere pentru ftp si http. ZServer (aceasta 
    implementare) reprezinta una dintre cele mai rapide variante de server 
    http implementat in python

zope.session
    implementeaza sesiuni si utilitare pentru identificarea clientilor

zope.size
    defineste modul in care se obtine informatia despre marimea unui obiect,
    precum si o implementare de baza

zope.structuredtext
    un motor de transformare a formatului Structured Text in html

zope.tal
    o implementare a sintaxei de templating TAL

zope.tales
    contine extensii ale sintaxei tal ce introduce expresii noi pentru 
    traversarea obiectelor

zope.testbrowser
    contine un browser ce poate fi programat, putand fi folosit in definirea 
    de teste functionale

zope.testing
    contine utilitare ce pot fi folosite in construirea de teste pentru 
    aplicatii si pachete Zope. Contine suport pentru teste unitare si teste
    de integrare. 

zope.testrecorder
    contine un proxy web ce poate fi folosit pentru inregistrarea comunicatiei
    http in scopul definirii de teste de integrare

zope.thread
    defineste modul in care pot fi create si administrate obiecte locale per
    thread. O simpla extensie a modulului standard thread

zope.traversing
    defineste utilitare si namespace-uri pentru traversare, precum si 
    utilitare pentru calcularea URL-ului absolut al unui obiect contextul
    hosting-ului virtual al aplicatiei
    
zope.viewlet
    extinde conceptul de content providere cu cel de viewleturi si viewlet 
    managere, ce permit definirea de zone in care vor fi inserate 
    viewlet-urile, view-uri dependente de context si zona in care vor fi
    inserate. Defineste, de asemenea, cateva viewlet managere standard

zope.xmlpickle
    pickle based serialization to and from xml

Packages from the zope.app namespace
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
zope.app.apidoc
    makes it possible to introspect objects with an autogenerated page that
    presents the provided interfaces, attributes and documentation. Offers a
    ZCML extension to register documentation for the so-called "Zope Book"

zope.app.aplicationcontrol
    Offers the possibility to control the application by the user (stop/restart/
    database pack, etc)

zope.app.appsetup
    a way to configure and build Zope applications

zope.app.authentication
    a complex system, based on plugins, to extract authentication data and to
    authenticate users (including the source of users)

zope.app.basicskin
    a simple skeleton skin

zope.app.boston
    a complete skin, similar to Rotterdam, based on viewlets

zope.app.broken
    integrates broken objects from the database so that they can be viewed and
    debugged

zope.app.cache
    a global utility that can store data for caching purposes

zope.app.catalog
    a complete indexing and searching solution for objects. Has two types of 
    indexes, based on zope.index: text and field

zope.app.component
    Extensions of zope.component. Integrates the various Zope components (views,
    layers, security, utilities, etc) and defines zcml extensions for them.

zope.app.container
    A BTree based implementation of containers, defines how they are traversed 
    and also has support for preconditions (what types of objects can be
    added, etc)

zope.app.content
    Defines the IContentType interface, which can be used to mark other 
    interfaces as having that type. Defines a vocabulary that lists these
    interfaces.

zope.app.dav
    Has a webdav server integrated with the rest of Zope infrastructure, has
    integration with ZCML

zope.app.debug
    has a debugger that can be started from the application controller script

zope.app.dependent
    provides a method to mark objects in the graph as being dependent on 
    each other

zope.app.dtmlpage
    has a content type based on DTML templates

zope.app.exception
    pages for exceptions, generating the equivalent in HTTP exceptions

zope.app.external
    minimal integration for what is needed to build an external editor

zope.app.file
    two new types of content: File and Image, also with integration for their
    external representation (IFileRepresentation)

zope.app.folder
    offers a folder content type, integrated with the management interface and
    its representation as external object (IFileRepresentation)

zope.app.form
    the old form library for Zope, it is considered outdated because of the
    dependency on ZCML and inflexibility. All these considered, the widget
    model is also used by zope.formlib and thus remains an important library

zope.app.ftp
    a view model for FTP

zope.app.generations
    migrationi for database when the persistent objects schema is changed

zope.app.homefolder
    has a homefolder implementation for users

zope.app.http
    integration with the http protocol: exceptions, methods, traversing methods
    and how views are solved

zope.app.i18n
    implements a persistent i18n messages catalog and ZCML extensions to 
    register translation folders 

zope.app.i18nfile
    internationalizable images and files (as content)

zope.app.interface
    a vocabulary for interfaces that an object provides

zope.app.interpretor
    an untrusted Python code interpretor

zope.app.intid
    a utility that associates unique ids to objects from the database

zope.app.keyreference
    an adapter for persistent objects that extracts their low level id from the 
    database, based on which an intid can be associated

zope.app.locales
    contains translation and utilities for Zope 3 software

zope.app.locking
    an implementation for object access locking, to be used, for example, in
    WebDav

zope.app.module
    persistent Python modules (Python code in ZODB)

zope.app.onlinehelp
    an infrastructure for help and documentation and a ZCML extension that makes
    it possible to register help by any extension package

zope.app.pagetemplate
    integrates ZPT templates with the view classes, offers a ZCML expression
    that makes it possible to register new types of ZPT expressions

zope.app.preference
    implements a method of storing preferences for each user and contains
    integration with ZCML for recording groups of preferences

zope.app.preview
    a simple way of previewing the site in an iframe

zope.app.principalannotation
    a method to associated data with principals, through a persistent annotation

zope.app.publication
    integrated methods of content publishing, has a ZCML extension to define 
    new methods of publishing, for each HTTP verb used

zope.app.publisher
    implements objects/pages that can be used in publishing content. Implements
    ZCML extensions to register pages and menus in ZCML

zope.app.pythonpage
    implements a type of persistent content that can interpret Python

zope.app.renderer
    infrastructura pentru transformarea unui tip de continut intr-un alt tip
    de continut (de exemplu din rest sau stx in html)

zope.app.rotterdam
    cel mai folosit skin Zope, implementeaza o interfata completa pentru 
    managementul zope-ului

zope.app.schema
    integreaza zope.schema cu infrastructura de securitate, ofera un registru
    pentru vocabulare

zope.app.security
    implementeaza infrastructura de securitate a Zope-ului, ofera metode de 
    baza pentru autentificarea utilizatorilor si generarea de principaluri,
    ofera extensii zcml pentru declararea de principaluri si grupuri globale

zope.app.securitypolicy
    ofera pagini prin care se pot modifica local, in baza de date, per obiect,
    setarile de securitate

zope.app.server
    implementeaza si face posibila configurarea de servere http si wsgi, 
    implementeaza o infrastructura pentru controlul acestora

zope.app.session
    ofera suport pentru sesiuni pentru asocierea de date cu un client

zope.app.sqlscript
    implementeaza obiecte de continut care pot executa comenzi sql

zope.app.testing
    ofera utilitare pentru crearea de teste

zope.app.tree
    implementeaza un widget arbore ce poate fi folosit in interfetele cu 
    utilizatorii pentru reprezentarea graph-ului de obiecte 

zope.app.twisted
    implementeaza un server bazat pe Twisted precum si infrastructura necesara
    pentru controlul si configurarea acestuia

zope.app.undo
    implementeaza pagini pentru controlul si executarea pasilor de undo

zope.app.winservice
    ofera un serviciu integrat in sistemele de operare bazate pe WinNT

zope.app.workflow
    ofera un motod de workflow si suport pentru crearea de definitii 
    persistente, in baza de date, a acestora

zope.app.wsgi
    ofera un obiect aplicatie WSGI pentru integrarea cu protocolul WSGI

zope.app.xmlrpcintrospection
    ofera introspectie protocolului XMLRPC, prin implementarea unor noi metode

zope.app.zapi
    grupeaza o serie de functii des folosit pentru convenienta dezvoltatorilor

zope.app.zcmlfiles
    ofera cateva fisiere zcml care grupeaza tematic pachetele zope, permitand
    astfel incarcarea selectiva a acestora

zope.app.zopeappgenerations
    migreaza baza de date de la versiuni mai vechi ale zope-ului

zope.app.zopetop
    un skin Zope, nu este foarte popular, fiind o versiune mai veche

zope.app.zptpage
    implementeaza template-uri persistente in baza de date


Other packages
**************
There are aproximatively 300 extension packages on svn.zope.org, not including
the namespaces zope.* and zope.app.*. Also, the Zope community is the biggest
producer of egg packages (following the PyPI statistics). Among those packages,
there are solutions for:

handling big files storages
    z3c.extfile, z3c.blobfile

reusing views through template customization
    z3c.template

separate the content of a view from its layout
    z3c.layout, z3c.pagelet

advanced, extensible forms
    z3c.form

memoizing (caching) views
    lovely.responsecache

headers for caching
    z3c.caching
    z3c.responseheaders
    z3ext.cacheheaders

ETAG support
    z3c.conditionalviews

various fields and widgets
    z3c.schema.*
    z3c.widget.*

integration with RDBs
    STORM
    zope.sqlalchemy, z3c.saconfig, ore.alchemist

automatic inclusion of resources (CSS, JS)
    zc.resourcelibrary
    z3c.resourceinclude

resource concatanation
    z3c.resourcecollector

local ZCA configuration
    z3c.baseregistry

faster templating engine
    z3c.pt

workflow
    hurry.workflow

language negociation, content internationalization
    z3c.language.*

configuration framework, specific to each package
    z3c.configurator

application development
    zc.buildout, pb.recipes.pydev (Eclipse integration for buildout)

execution of asynchronous tasks
    lovely.remotetask, zc.async

session sharing for ZEO clients
    lovely.session

flexible generation of tables and listings
    z3c.table, zc.table

greater control over the cataloging and indexing process
    z3c.indexer


Other web resources
*******************

Zope 3 wiki
    Although doesn't seem too atractive, the Zope 3 wiki represents, at this
    moment, the official site and is a good place to find pointers to other
    Zope 3 sites. Location://wiki.zope.org/zope3

The new zope.org
    Although it is not yet officially launched, the new website has already
    enough new and intersting pages (for example, the Getting Started Guide,
    updated to the latest method of installing Zope 3). 
    Location: http://new.zope.org/

A Comprehensive Guide to Zope Component Architecture
    A document filles with examples and explanation of the Zope Component 
    Architecture, configuration with zcml and the way to use in any Python
    application. Location: http://www.muthukadan.net/docs/zca.html

3rd party packages reference guide
    A guide/reference of extension pacakges from svn.zope.org.
    Location: http://wiki.zope.org/zope3/Zope3PackageGuide

What's new in Zope 3.3
    A document that discusses the changes brought by Zope 3.3 (when the 
    component simplification took place). Useful for a short presentation of
    skins, vocabularies and factories. 
    Location: http://kpug.zwiki.org/WhatIsNewInZope33

Zope 3 Book
    Although seems old (it was written before the component architecure 
    simplification), a good deal of what is there is still true, or can be 
    easily adjusted to today's code. 
    Location: http://wiki.zope.org/zope3/Zope3Book

Worldcookery
    The Downloads section contains code licensed under GPL. This code, in the 
    absence of the book (which is highly recommended), helps in understanding
    Zope. Location: http://worldcookery.com/Downloads

Documentation for z3c.form
    z3c.form includes its documentation in its source code. An HTML version is 
    available at http://www.carduner.net/docs/z3c.form/

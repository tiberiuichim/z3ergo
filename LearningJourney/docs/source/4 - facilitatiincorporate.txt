Facilitati incorporate
======================

Publicarea prin web
-------------------
Principalul rol al Zope-ului este acela de a publica pagini prin web. Desi nu 
este neaparat legat de protocolul http, o mare parte din librariile Zope se 
preocupa de aceasta problema. Module in care Zope realizeaza aceasta publicare
este acela de a asocia pagini unui graph (arbore) de obiecte. In principiu
aceste obiecte sunt obiecte persistente provenind din ZODB, dar la fel de bine
se pot publica si obiecte tranziente.  

Persistenta obiectelor
----------------------
In mod implicit datele sunt salvate intr-o baza de date cu obiecte, ZODB. 
Odata cu aparitia librariilor cu facilitati ORM, au aparut si modalitati de 
integrare cu acestea. Una dintre problemele care o rezolva Zope-ul in 
integrarea cu baza de date este mecanismul de tranzactie. Daca o eroare a 
aparut in codul ce genereaza pagina sau proceseaza datele utilizatorului, datele
din baza de date nu sunt salvate. 

API pentru dezvoltarea de aplicatii
-----------------------------------
Zope 3 se bucura de un ecosistem de librarii care acopera o mare parte din 
ceea ce este necesar pentru dezvoltarea de aplicatii web. API-ul Zope-ului este
bine documentat si este stabil. In cazul in care unele librarii se depreciaza,
acestea sunt mentinute si se pastreaza compatibilitate in versiunile urmatoare.
Datorita folosirii pachetelui zope.interface in marea majoritate a librariilor 
Zope, se asigura auto-documentarea API-ului. Datorita folosirii extensive a 
procedurilor de programare de tip Aspect Oriented Programming, extinderea sau
modificarea comportamentului implicit al librariilor este usor de realizat, la
fel si dezvoltarea de cod ce va fi usor de extins de catre alte parti.

Sistem de templating extensibil
-------------------------------
Desi Zope poate folosi orice motor de templating, in mod clasic este preferata
sintaxa ZPT. In Zope exista doua implementari ZPT: cea clasica si z3c.pt, o 
noua librarie compatibila cu sintaxa ZPT si integrata cu Zope, dar care ofera 
o viteza de cel putin 10 ori mai mare. In Zope sistemul de templating ZPT poate
fi extins cu noi tipuri de expresii.

Modele de templating
--------------------
Zope ofera cateva modele de nivel inalt de integrare a continutului cu 
template-urile: **content providere-le**, ce insereaza continut in template in 
functie de tipul contextului, **viewlet-urile**, o forma extensibila de management
al content providerelor si **pagelet-urile**, care separa continutul unui fragment
html (pagina sau view) de layout-ul aceastuia.

Sistem de indexare si cautare
-----------------------------
Zope ofera un sistem integrat de indexare a obiectelor, oferind in mod implicit
indecsi pentru Text si valori arbitrare (Field). Scrierea unui nou tip de index
nu este o sarcina foarte complicata, in mod special datorita API-ului simplu, 
ceea ce face foarte usoara integrarea cu sisteme de cautare specializate precum
Lucene sau Xapian.

Adnotarea obiectelor
--------------------
Unul dintre conceptele inovatoare integrate in Zope 3 este cel al adnotarii 
obiectelor. Acest mecanism, facilitat de ZCA, permite adnotarea cu date a 
oricarui obiect (fie el persistent sau tranzient), astfel incat sa poata fi 
extinsa functionalitatea acestora.

Internationalizare
------------------
Zope 3 ofera un mecanism de internationalizare compatibil cu standardul 
**gettext**. Acest mecanism are extensii pentru ZPT si se ofera si un API foarte 
usor de folosit din Python. De asemenea se ofera mecanisme pentru localizare 
(formatarea numerelor, a datelor si a timpului) precum si o baza de date ce 
contine diferentele regionale ce implica mecanismul de localizare. Exista de 
asemenea si unelte pentru dezvoltatori ce faciliteaza extragerea mesajelor 
internationalizabile si integrarea in fisiere de traducere deja existente.
Este, de asemenea, posibila internationalizarea continutului prin folosirea
a cateva extensii create de comunitatea Zope.

Evenimente
----------
O modalitate foarte eleganta de asigurare a unor puncte de insertie pentru
extinderea functionalitatii, evenimentele sunt prezente si in Zope 3. Astfel,
exista o gama larga de evenimente definite si declansate de catre Zope in timpul
functionarii. Printre cele mai importante sunt cele legate de ciclul de viata
al obiectelor (crearea, adaugarea, modificarea sau stergerea obiectelor).

Formulare web
-------------
Zope ofera doua librarii pentru generarea, validarea si procesarea automata a 
formularelor web, iar comunitatea Zope a dezvoltat un nou pachet (z3c.form) 
care reprezinta o solutie similara celei integrate in Zope, dar mai avansata si 
mai flexibila.

Securitate
----------
Securitatea este unul dintre capitolele in care Zope este foarte puternic. 
Sistemul integrat in Zope abstractizeaza interactiunea cu agentii externi 
(utilizatori) si ofera un mecanism bazat pe permisiuni, grupuri si roluri. 
In mod implicit exista doua nivele de verificari ale securitatii: per pagina
publicata si per obiect. 

Librarii de testare a codului
-----------------------------
Zope ofera posibilitati de testare automata a codului (de altfel testarea este
puternic incurajata de catre comunitatea Zope). Se ofera integrare cu toate
mecanismele de test oferite de Python, putandu-se realiza atat teste pe cod
cat si teste de integrare si functionalitate a intregului sistem.

Alte protocoale
---------------
Zope ofera un sistem foarte simplu pentru definirea de facilitati de trimitere
asincrona a mesajelor de email. De asemenea, se ofera posibilitatea publicarii 
obiectelor prin protocoalele WebDAV, FTP si XMLRPC.


Slides
------

* Publicarea prin web cu sistem de tip graph de traversare
    * obiectele sunt amplasate intr-un arbore, fiecare obiect poate publica
      anumite pagini
* Persistenta obiectelor:
    * important este mecanismul de tranzactii
    * traditional cu ZODB
    * main nou cu RDB-uri: STORM, SQLAlchemy
    * datorita ZCA, putem publica orice gen de obiecte prin web (gen obiecte
      "tranziente")
* API pentru dezvoltarea de aplicatii
    * z3 tinde mai nou catre o filozofie gen "librarie" decat un server de
      aplicatii la care adaugi aplicatii
* Sistem de templating (ZPT, DTML, z3c.pt => chameleon.* - de 10x mai rapid,
  pentru Plone cu aproape 200% mai rapid)
    * sistemul de templating poate fi extins cu noi tipuri de expresii, ex: 
      lovely.tal, z3ext.formatter, zope.contentprovider
    * expresia path('/root/obj/@@hello')
* zope.interface - o extensie Python pentru documentarea obiectelor
    * provide, implements
* Cautarea obiectelor se face cu ajutorul catalogului
* Anotarea obiectelor
    * IAttributeAnnotatable
* Internationalizare interfata
* Internationalizare continut cu z3c.language.switch
* Folosirea de aspecte ale obiectelor, folosind adaptarea
* Exista un sistem de generare si procesare a evenimentelor
    * obiectele au un "lifecycle": ObjectCreatedEvent, ObjectModifiedEvent,
      ObjectAddedEvent, ObjectRemovedEvent
* librarie pentru construirea de form-uri autogenerate din schema
* Securitate bazata pe interactiuni, principals
* API pentru trimiterea de mesaje email asincron
* API pentru reprezentarea in/out a obiectelor pentru protocoale XMLRPC, 
  ftp, webdav
* Framework pentru test: unit-teste, teste de integrare, teste functionale
    * doctest-urile
